name: SDK PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'packages/sdk/**'
      - '.github/workflows/sdk-pr.yml'

jobs:
  quick-check:
    name: Quick Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm --filter codefetch-sdk lint

      - name: Run type checking  
        run: pnpm --filter codefetch-sdk test:types

      - name: Run tests
        run: pnpm --filter codefetch-sdk test:coverage
        env:
          CI: true

      - name: Build SDK
        run: |
          pnpm --filter codefetch-sdk build
          pnpm --filter codefetch-sdk build:worker

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('SDK Test Results')
            );
            
            const body = `## üß™ SDK Test Results
            
            ${context.job.status === 'success' ? '‚úÖ All checks passed!' : '‚ùå Some checks failed'}
            
            | Check | Status |
            |-------|--------|
            | Linting | ${steps.linting?.outcome || 'pending'} |
            | Type Check | ${steps.typecheck?.outcome || 'pending'} |
            | Tests | ${steps.tests?.outcome || 'pending'} |
            | Build | ${steps.build?.outcome || 'pending'} |
            
            [View full logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body
              });
            }